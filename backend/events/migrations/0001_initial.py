# Generated by Django 5.1.7 on 2025-03-15 13:52

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('clubs', '0001_initial'),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('event_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('event_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('INDIVIDUAL', 'Individual'), ('GROUP', 'Group')], default='INDIVIDUAL', max_length=20)),
                ('max_participants', models.PositiveIntegerField()),
                ('event_status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed')], default='UPCOMING', max_length=20)),
                ('registration_status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed')], default='CLOSED', max_length=20)),
                ('approval_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='clubs.club')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_events', to='accounts.student')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departmental_events', to='departments.department')),
            ],
        ),
        migrations.CreateModel(
            name='EventApproval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approval_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_approvals', to='accounts.coordinator')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('CONFIRMED', 'Confirmed'), ('WAITLISTED', 'Waitlisted'), ('CANCELLED', 'Cancelled')], default='CONFIRMED', max_length=20)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('attended', models.BooleanField(default=False)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='events.eventregistration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('group_name', models.CharField(max_length=100)),
                ('max_members', models.PositiveIntegerField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='events.event')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_groups', to='accounts.student')),
            ],
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='events.group'),
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='events.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to='accounts.student')),
            ],
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['event_status'], name='events_even_event_s_93f28a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['approval_status'], name='events_even_approva_9145b7_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['club'], name='events_even_club_id_7c0740_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['event_date'], name='events_even_event_d_2c2da5_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['department'], name='events_even_departm_cfdfa6_idx'),
        ),
        migrations.AddIndex(
            model_name='eventapproval',
            index=models.Index(fields=['approval_status'], name='events_even_approva_8b4d27_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventapproval',
            unique_together={('event', 'coordinator')},
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('group_name', 'event')},
        ),
        migrations.AddIndex(
            model_name='eventregistration',
            index=models.Index(fields=['status'], name='events_even_status_bdf692_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together={('event', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='groupmember',
            unique_together={('group', 'student')},
        ),
    ]
